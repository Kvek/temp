import deepmerge from 'deepmerge';

import {
  app as appDefault,
  black as blackDefault,
  buy as buyDefault,
  caution as cautionDefault,
  important as importantDefault,
  information as informationDefault,
  pending as pendingDefault,
  primary as primaryDefault,
  risk as riskDefault,
  secondary as secondaryDefault,
  sell as sellDefault,
  shadows as shadowsDefault,
  status as statusDefault,
  success as successDefault,
  transparent as transparentDefault,
  transparentInverse as transparentInverseDefault,
  warning as warningDefault,
} from './default-theme/colors';
import { themeVariables } from './default-theme/variables';
import {
  ColorsInterface,
  GlobalThemeConfigColorsInterface,
  ThemeVariablesInterface,
} from './types';

export const colorOverride = ({
  app,
  black,
  buy,
  caution,
  important,
  information,
  pending,
  primary,
  risk,
  secondary,
  sell,
  shadows,
  status,
  success,
  transparent,
  transparentInverse,
  warning,
}: GlobalThemeConfigColorsInterface): ColorsInterface => ({
  app: deepmerge(themeVariables.app, app),
  black: deepmerge(themeVariables.black, black),
  buy: deepmerge(themeVariables.buy, buy),
  caution: deepmerge(themeVariables.caution, caution),
  important: deepmerge(themeVariables.important, important),
  information: deepmerge(themeVariables.information, information),
  pending: deepmerge(themeVariables.pending, pending),
  primary: deepmerge(themeVariables.primary, primary),
  risk: deepmerge(themeVariables.risk, risk),
  secondary: deepmerge(themeVariables.secondary, secondary),
  sell: deepmerge(themeVariables.sell, sell),
  shadows: deepmerge(themeVariables.shadows, shadows),
  status: deepmerge(themeVariables.status, status),
  success: deepmerge(themeVariables.success, success),
  transparent: deepmerge(themeVariables.transparent, transparent),
  transparentInverse: deepmerge(
    themeVariables.transparentInverse,
    transparentInverse
  ),
  warning: deepmerge(themeVariables.warning, warning),
});

export const variablesOverride = ({
  app,
  black,
  buy,
  caution,
  important,
  information,
  pending,
  primary,
  risk,
  secondary,
  sell,
  shadows,
  status,
  success,
  transparent,
  transparentInverse,
  warning,
}: ColorsInterface): ThemeVariablesInterface => ({
  ...themeVariables,
  app: deepmerge(appDefault, app),
  black: deepmerge(blackDefault, black),
  buy: deepmerge(buyDefault, buy),
  caution: deepmerge(cautionDefault, caution),
  important: deepmerge(importantDefault, important),
  information: deepmerge(informationDefault, information),
  pending: deepmerge(pendingDefault, pending),
  primary: deepmerge(primaryDefault, primary),
  risk: deepmerge(riskDefault, risk),
  secondary: deepmerge(secondaryDefault, secondary),
  sell: deepmerge(sellDefault, sell),
  shadows: deepmerge(shadowsDefault, shadows),
  status: deepmerge(statusDefault, status),
  success: deepmerge(successDefault, success),
  transparent: deepmerge(transparentDefault, transparent),
  transparentInverse: deepmerge(transparentInverseDefault, transparentInverse),
  warning: deepmerge(warningDefault, warning),
});
